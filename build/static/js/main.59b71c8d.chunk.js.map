{"version":3,"sources":["App.js","poster.jpg","logo.svg","TitleSearchTMDB.js","RelatedSearchTMDB.js","ExtIdSearchTMDB.js","WikiIdSearch.js","index.js"],"names":["tmdbJson","tmdbArray","query","a","url","fetch","response","json","data","alert","ExtIdSearchTMDB","detailTitle","detailOverview","detailPoster","detailId","tableHeader","isSearching","rows","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","onRequestSort","rowCount","TableHead","TableRow","TableCell","headCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","tableRow","height","EnhancedTableToolbar","CircularProgress","Toolbar","clsx","Typography","variant","component","useStyles","maxWidth","background","paper","width","marginBottom","table","minWidth","textField","margin","border","clip","overflow","position","top","useCardStyles","boxShadow","media","EnhancedTable","classesCard","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","handleWikiClick","wikiJson","imdbID","wikiURL","wikiPlotShort","then","result","imdb_id","WikiIdSearch","result2","plotShort","html","window","open","handleRelatedClick","RelatedSearchTMDB","results","movie","popularity","genre","voteCount","vote_count","voteAverage","vote_average","poster","poster_path","overview","handleSearchFieldEnter","keyCode","TitleSearchTMDB","target","value","length","emptyRows","Math","min","Container","Paper","Grid","container","alignItems","item","xs","TextField","fullWidth","onKeyDown","TableContainer","Table","aria-labelledby","size","aria-label","checked","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","newSelected","concat","handleClick","role","aria-checked","tabIndex","style","verticalAlign","img","src","Poster","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","Box","image","pl","pt","sm","Card","CardActionArea","CardContent","gutterBottom","parse","CardActions","Button","handleImdbClick","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.59b71c8d.chunk.js","sourcesContent":["import React from 'react';\nimport parse from 'html-react-parser';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\n//import FormControlLabel from '@material-ui/core/FormControlLabel';\n//import Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\n//import React from 'react';\n//import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\n\n//import React from 'react';\n//import { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Search from '@material-ui/icons/Search';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Container from '@material-ui/core/Container';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Logo from './logo.svg';\nimport Poster from './poster.jpg';\n\nimport TitleSearchTMDB from './TitleSearchTMDB';\nimport RelatedSearchTMDB from './RelatedSearchTMDB';\nimport ExtIdSearchTMDB from './ExtIdSearchTMDB';\nimport WikiIdSearch from './WikiIdSearch';\n\nfunction createData(title, genre, popularity, voteCount, voteAverage, poster, id) {\n  return { title, genre, popularity, voteCount, voteAverage, poster, id};\n}\n\n\nvar tmdbJson;\nvar tmdbArray;\nvar detailTitle = \"Click on a movie above after search to see details\";\nvar detailOldTitle = \"Movie title\";\nvar detailOverview = \"\";\nvar detailPoster = \"\";\nvar detailId = 0;\nvar tableHeader = \"Movies will be listed here after search\";\nvar isSearching = false;\n\nvar rows = [];\n/*\n  createData('Movie1', 305, 3.7, 67, 4.3,'',0),\n  createData('Movie2', 452, 25.0, 51, 4.9,'',0),\n  createData('Movie3', 262, 16.0, 24, 6.0,'',0),\n  createData('Movie4', 159, 6.0, 24, 4.0,'',0),\n  createData('Movie5', 356, 16.0, 49, 3.9,'',0),\n  createData('Movie6', 408, 3.2, 87, 6.5,'',0),\n  createData('Movie7', 237, 9.0, 37, 4.3,'',0),\n  createData('Movie8', 375, 0.0, 94, 0.0,'',0),\n  createData('Movie9', 518, 26.0, 65, 7.0,'',0),\n  createData('Movie10', 392, 0.2, 98, 0.0,'',0),\n  createData('Movie11', 318, 0, 81, 2.0,'',0),\n  createData('Movie12', 360, 19.0, 9, 37.0,'',0),\n  createData('Movie13', 437, 18.0, 63, 4.0,'',0),\n];*/\n\nfunction detOvHTML() {\n  return detailOverview;\n}\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'title', numeric: false, disablePadding: false, label: 'Title'},\n  { id: 'genre', numeric: false, disablePadding: false, label: 'Genre'},\n  { id: 'popularity', numeric: true, disablePadding: false, label: 'Popularity' },\n  { id: 'voteCount', numeric: true, disablePadding: false, label: 'Vote_#' },\n  { id: 'voteAverage', numeric: true, disablePadding: false, label: 'Vote_Avg' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n  tableRow: {\n    height: 70\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const handleTitleClick = (event) => {\n    alert(\"Title click\");\n  };\n  const classes = useToolbarStyles();\n                if(isSearching) {\n                       return <CircularProgress />\n                    }  \n                    else { return (\n    <Toolbar\n      className={clsx(classes.root)}\n    >\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\"  onClick={(event) => handleTitleClick(event)}> \n          {tableHeader}\n        </Typography>\n    </Toolbar>\n  );\n  }\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 2000,\n//    width: '100%',\n//    color: 'red',\n      background: 'lightgrey',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,  \n  },\n  textField: {\n    width: '75ch',\n  },\n  margin: {\n    margin: theme.spacing(10),\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useCardStyles = makeStyles({\n  root: {\n    maxWidth: 1200,\n//    minHeight: 400,\n    boxShadow: '0 0px 0px 0px',\n  },\n  media: {\n    height: 0,\n  },\n});\n\n\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const classesCard = useCardStyles();\n\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.title);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, title, overview, id, poster) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(id);\n    }\n    setSelected(newSelected);\n    detailTitle = title;\n//    detailOverview = overview;\n    detailPoster = poster;\n    detailId = id;\n    \n  };\n\n  const handleWikiClick = (event) => {\n    var strWindowFeatures = \"status=yes\";\n    var win;\n    var imdbID = \"\";\n    var wikiJson;\n    var wikiURL = \"\";\n    var wikiPlotShort =\"\";\n    ExtIdSearchTMDB(detailId)\n    .then(result => (tmdbJson = result))\n    .then(result => (imdbID = tmdbJson.imdb_id))\n    .then(result => (\n        WikiIdSearch(imdbID)\n        .then(result2 => (wikiJson = result2))\n        .then(result2 => (wikiURL = wikiJson.url))\n        .then(result2 => (wikiPlotShort = wikiJson.plotShort.html))\n        .then(result2 => (detailOverview = wikiPlotShort))\n        .then(result2 => (win = window.open(wikiURL, \"_blank\", strWindowFeatures)))\n      ))\n   };\n\n  const handleImdbClick = (event) => {\n    var strWindowFeatures = \"status=yes\";\n    var URL = \"https://www.imdb.com/title/\";\n    var win;\n    var imdbID = \"\";\n    ExtIdSearchTMDB(detailId)\n    .then(result => (tmdbJson = result))\n    .then(result => (imdbID = tmdbJson.imdb_id))\n    .then(result => (win = window.open(URL+imdbID, \"_blank\", strWindowFeatures)))\n   };\n\n  const handleRelatedClick = (event) => {\n    tableHeader = detailTitle + \" - related movies\";\n    RelatedSearchTMDB(detailId)\n    .then(result => (tmdbJson = result))\n    .then(result => (tmdbJson = tmdbJson.results))\n    .then(result => (tmdbArray = tmdbJson.map (movie => ({title: movie.title, popularity: movie.popularity, genre: \"Valami genre\", voteCount: movie.vote_count, voteAverage: movie.vote_average, poster: movie.poster_path, id: movie.id, overview: movie.overview}))))\n    .then(result => (rows = tmdbArray))\n    .then(result => (setSelected([])))\n    .then(result => (setPage(0)))\n    \n};\n\n  const handleSearchFieldEnter = (event) => {\n    isSearching = true;\n    tableHeader = \"Movies found\";\n    if(event.keyCode == 13){\n        TitleSearchTMDB(event.target.value)\n          .then(result => (tmdbJson = result))\n          .then(result => (tmdbJson = tmdbJson.results))\n          .then(result => (tmdbArray = tmdbJson.map (movie => ({title: movie.title, popularity: movie.popularity, genre: \"Valami genre\", voteCount: movie.vote_count, voteAverage: movie.vote_average, poster: movie.poster_path, id: movie.id, overview: movie.overview}))))\n          .then(result => (rows = tmdbArray))\n          .then(result => (isSearching = false))\n          .then(result => (rows.length == 0 ? tableHeader = \"No movies found\" : tableHeader = \"Movies found\"))\n          .then(result => (setSelected([])))\n          .then(result => (setPage(0))) \n \n    }\n  }; \n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n\n\n  const isSelected = (title) => selected.indexOf(title) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n    <Container maxWidth =\"md\">\n      <br/>\n      <Paper className={classes.paper}>\n          <Grid container spacing={2} alignItems=\"flex-end\" >\n            <Grid item xs={1} />\n            <Grid item >\n              <Search />\n            </Grid>\n            <Grid item xs={9}> \n              <TextField \n                fullWidth id=\"input-with-icon-grid\" \n                label=\"Search for your movie\" \n                onKeyDown={(event) => handleSearchFieldEnter(event)}\n              />\n            </Grid>\n          </Grid>\n      </Paper>  \n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar/>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size= 'small'\n            aria-label=\"enhanced table\"\n          >\n            <colgroup>\n              <col width=\"7%\" />\n              <col width=\"43%\" />\n              <col width=\"20%\" />\n              <col width=\"10%\" />\n              <col width=\"10%\" />\n              <col width=\"10%\" />\n            </colgroup>\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.title);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.title, row.overview, row.id, row.poster)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.title}\n                      selected={isItemSelected}\n                      height={80}\n                    >\n                      <TableCell padding=\"none\" align=\"center\" style={{ verticalAlign: 'bottom' }}>\n                        <img className={classes.img} src={row.poster? \"https://image.tmdb.org/t/p/w200\"+row.poster : Poster} height={70}/>\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"checkbox\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.genre}</TableCell>\n                      <TableCell align=\"right\">{row.popularity}</TableCell>\n                      <TableCell align=\"right\">{row.voteCount}</TableCell>\n                      <TableCell align=\"right\">{row.voteAverage}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 80 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n        />\n      </Paper>\n      <Paper className={classes.paper}>\n      <Grid container spacing={2} >\n        <Grid item xs={3}>\n          <Box className={classes.image} align=\"left\" pl = {1.5} pt = {0.5} >\n            <img className={classes.img} src={detailPoster? \"https://image.tmdb.org/t/p/w500\"+detailPoster : Poster} height={280}/>\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item container direction=\"column\" spacing={0}>\n            <Card className={classesCard.root}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {detailTitle}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {parse(detailOverview)}\n                  </Typography>\n \n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button \n                  size=\"small\" \n                  color=\"primary\"\n                  onClick={(event) => handleWikiClick(event)}\n                >\n                  Wikipedia\n                </Button>\n                <Button \n                  size=\"small\" \n                  color=\"primary\"\n                  onClick={(event) => handleImdbClick(event)}\n                >\n                  IMDB\n                </Button>\n                <Button \n                  size=\"small\" \n                  color=\"secondary\"\n                  onClick={(event) => handleRelatedClick(event,detailTitle)}\n                >\n                  Related movies\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid> \n      </Paper> \n    </Container>      \n    <br/><br/><br/><br/>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/poster.23bcae56.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default async function TitleSearchTMDB(query){\r\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=5863736706c2c1885e88c279d92b75cf&language=en-US&query=${query}&page=1&include_adult=false`;\r\n  try{\r\n     const response = await fetch(url);\r\n     const data = await response.json();\r\n     return data;\r\n  }catch(err){\r\n     alert('Failed to search TMDB');\r\n  }\r\n}\r\n\r\n","export default async function RelatedSearchTMDB(query){\r\n    const url = `https://api.themoviedb.org/3/movie/${query}/similar?api_key=5863736706c2c1885e88c279d92b75cf&language=en-US&page=1`;\r\n    try{\r\n       const response = await fetch(url);\r\n       const data = await response.json();\r\n       return data;\r\n    }catch(err){\r\n       alert('Failed to search TMDB');\r\n    }\r\n  }\r\n  \r\n  \r\n","export default async function ExtIdSearchTMDB(query){\r\n    const url = `https://api.themoviedb.org/3/movie/${query}/external_ids?api_key=5863736706c2c1885e88c279d92b75cf`;\r\n    try{\r\n       const response = await fetch(url);\r\n       const data = await response.json();\r\n       return data;\r\n    }catch(err){\r\n       alert('Failed to search TMDB');\r\n    }\r\n  }\r\n  ","export default async function WikiIdSearchTMDB(query){\r\n    const url = `https://imdb-api.com/en/API/Wikipedia/k_r9op1fcg/${query}`;\r\n    try{\r\n       const response = await fetch(url);\r\n       const data = await response.json();\r\n       return data;\r\n    }catch(err){\r\n       alert('Failed to search Wiki ID');\r\n    }\r\n  }\r\n  ","/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dremo from './App';\n\nReactDOM.render(<Dremo />, document.querySelector('#root'));"],"sourceRoot":""}